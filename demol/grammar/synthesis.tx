// Grammar for a system. A system consists a board (ESP32/ESP8266)
// and one or more peripherals (sensors/actuators).

import devices
import communication

Synthesis:
    imports*=Import
    devices=DevicesBag
    (
        network=Network
        communication=CommunicationMiddleware
        connections+=Connection
    )#
;

DevicesBag:
    'Devices'
	    ("board:" board=[devices.Board:FQN|+m:device])  // RREL
	    ("peripherals:" '-' peripherals*=[Peripheral:FQN|+m:device]['-'])? // RREL
    'end'
;

Connection:
	"Connection"
	(
	    ("board:" board=[devices.Board:ID])  // Hanled by Model Processor
	    ("peripheral:" peripheral=[Peripheral:ID]) // Handled by Model processor
	    ("powerConnections:" '-' power_conns*=PowerConnection['-'])
	    ("ioConnections:" '-' io_conns+=IOConnection['-'])
	    ("driverTpl:" driverTpl=STRING)?
	    ("endpoint:" endpoint=Endpoint)?
    )#
    'end'
;

PowerConnection:
	boardPin=[PowerPin:FQN|+m:device.pins] "--" peripheralPin=[PowerPin:FQN|+m:device.pins]
;

IOConnection:
	GPIOConnection | I2CConnection | SPIConnection | UARTConnection
;

GPIOConnection:
	"gpio" ":" boardPin=[IOPin:FQN|+m:device.pins] "--"
		peripheralPin=[IOPin:FQN|+m:device.pins]
;

FREQUENCY:
	val=INT unit=FREQ_UNIT
;

FREQ_UNIT:
	"hz" | "khz" | "mhz" | "ghz"
;

SPIConnection:
	"spi" ":"
	"mosi" ":" boardPin0=[IOPin:FQN|+m:device.pins] "--"
		peripheralPin0=[IOPin:FQN|+m:device.pins]
	"miso" ":" boardPin1=[IOPin:FQN|+m:device.pins] "--"
		peripheralPin1=[IOPin:FQN|+m:device.pins]
	"sck" ":" boardPin2=[IOPin:FQN|+m:device.pins] "--"
		peripheralPin2=[IOPin:FQN|+m:device.pins]
	"cs" ":" boardPin3=[IOPin:FQN|+m:device.pins] "--"
		peripheralPin3=[IOPin:FQN|+m:device.pins]
;

I2CConnection:
	"i2c" ":"
        "sda" ":" boardPin0=[IOPin:FQN|+m:device.pins] "--"
            peripheralPin0=[IOPin:FQN|+m:device.pins]
        "scl" ":" boardPin1=[IOPin:FQN|+m:device.pins] "--"
            peripheralPin1=[IOPin:FQN|+m:device.pins]
        "slave_address:" "0x" slave_addr=INT
;

UARTConnection:
	"uart" ":"
        "tx" ":" boardPin0=[IOPin:FQN|+m:device.pins] "--"
            peripheralPin0=[IOPin:FQN|+m:device.pins]
        "rx" ":" boardPin1=[IOPin:FQN|+m:device.pins] "--"
            peripheralPin1=[IOPin:FQN|+m:device.pins]
        "baudrate:" baudrate=INT
;

Endpoint:
	(
        ("topic:" topic=STRING)
	    ("msg:" msg=MessageType)
        ("frequency:" freq=FREQUENCY)?
    )#
;

EndpointType:
    "Publisher"     |
    "Subscriber"    |
    "Consumer"      |
    "RPC"           |
    "Action"
;

Network:
    "Network"
	(
	    ("ssid:" ssid=STRING)
	    ("passwd:" passwd=STRING)
	    ("address:" address=STRING)?
	    ("channel:" channel=STRING)?
    )#
    "end"
;


ADDRESS_ID:
	/([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}/
;

MessageType:
	SensorMsgType | ActuatorMsgType | CustomMsgType
;

CustomMsgType: 'Custom';

SensorMsgType:
	"Distance"      |
    "Temperature"   |
    "Humidity"      |
    "Gas"           |
    "Pressure"      |
    "Env"           |
    "Acceleration"  |
    "Custom"
;

ActuatorMsgType:
	"MotorController"   |
    "LedController"     |
    "ServoController"   |
    "Custom"
;

// FQN: ID+['.'];
FQN: ID('.'ID)*;
FQNI: ID+['.']('.*')?;
Import: 'import' importURI=FQNI ('as' name=ID)?;

Description: /\#(.*?)$/;

// Special rule for comments. Comments start with //

// Comments
Comment: CommentLine | CommentBlock ;

CommentLine: /\/\/.*?$/;

CommentBlock: /\/\*(.|\n)*?\*\//;

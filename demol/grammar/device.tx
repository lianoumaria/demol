// Grammar for a system. A system consists a board (ESP32/ESP8266)
// and one or more peripherals (sensors/actuators).

import component
import communication
import common

DeviceModel:
    imports*=Import
    (
        metadata=Metadata
        network=Network
        components=Components
        communication=CommunicationMiddleware
        connections+=Connection
    )#
;

Metadata:
    'Metadata'
    (
        ('name:' name=STRING)
        ('description:' description=STRING)
        ('author:' author=STRING)
        ('os:' os=OperatingSystem)
    )#
    'end'
;

Network:
    "Network"
	(
	    ("ssid:" ssid=STRING)
	    ("passwd:" passwd=STRING)
	    ("address:" address=IP_ADDRESS)?
	    ("channel:" channel=STRING)?
    )#
    "end"
;

Components:
	"Components"
	(
        ('board:' board=[Board:FQN|+m:component])
        ('peripherals:' '-' peripherals*=[Peripheral:FQN|+m:component]['-'])
    )#
    'end'
;


Connection:
	"Connection"
	(
	    ("peripheral:" peripheral=[Peripheral:FQN|+m:component]) // Handled by Model processor
	    ("powerConnections:" '-' powerConns*=PowerConnection['-'])
	    ("ioConnections:" '-' ioConns+=IOConnection['-'])
	    ("endpoint:" endpoint=Endpoint)?
    )#
    'end'
;

PinConnection:
    boardPin=ID "--" peripheralPin=ID
;

PowerConnection: PinConnection;

IOConnection:
	GPIOConnection | I2CConnection | SPIConnection | UARTConnection
;

GPIOConnection:
	"type" ":"  type="gpio"
    ('name:' name=NID)?
    (mode=GPIOMode)?
    ('pin:' pinConn=PinConnection)
;

GPIOMode:
    ('input' ':' input=BOOL)?
    ('output' ':' output=BOOL)?
    ('pullup' ':' pullup=BOOL)?
    ('pulldown' ':' pulldown=BOOL)?
    ('open_drain' ':' openDrain=BOOL)?
;

SPIConnection:
	"type" ":" type="spi"
    ('name:' name=NID)?
    ('pins:')
    (
        ("mosi" ":" mosi=PinConnection)
        ("miso" ":" miso=PinConnection)
        ("sck" ":" sck=PinConnection)
        ("cs" ":" cs=PinConnection)
    )#
;

I2CConnection:
	"type" ":" type="i2c"
    (
    ('name:' name=NID)?
    ("slave_address:" "0x" slaveAddr=INT)
    ('pins:')
    (
        ("sda" ":" sda=PinConnection)
        ("scl" ":" scl=PinConnection)
    )#
    )#
;

UARTConnection:
	"type" ":" type="uart"
    ('name:' name=NID)?
    ('pins:')
    (
        ("tx" ":" tx=PinConnection)
        ("rx" ":" rx=PinConnection)
        ("baudrate:" baudrate=INT)
    )#
;

Endpoint:
	(
        ("topic:" topic=STRING)
        ("type:" type=EndpointType)?
    )#
;

EndpointType:
    "Publisher"     |
    "Subscriber"    |
    "RPC"           |
    "Action"
;

OperatingSystem:
    'Raspbian' |
    'RiotOS'
;
